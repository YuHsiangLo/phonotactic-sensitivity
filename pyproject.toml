[tool.poetry]
name = "phonotactic-sensitivity"
version = "0.1.0"
description = ""
authors = ["mdhk <m.l.s.deheerkloots@uva.nl>"]
readme = "README.md"
packages = [{include = "phonotactic_sensitivity", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
transformers = "^4.36.2"
pandas = "^2.1.4"
torch = "^2.1.2"
librosa = "^0.10.1"
matplotlib = "^3.8.2"
seaborn = "^0.13.1"
tgt = "^1.5"
datasets = "^2.18.0"
tokenizers = "0.19"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
ruff = "^0.5.0"
pytest = "^8.2.2"
jupyterlab = "^4.0.11"
ipywidgets = "8.1.1"
ipympl = "0.9.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
skip-string-normalization = true
line-length = 120

[tool.ruff]
# Same as Black.
line-length = 120

exclude = ["jupyter_notebook_config.py"]
select = [
    "E",  # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []